name: NHL Data Pipeline

on:
  push:
    branches: [ main, master ]
    paths:
      - 'scripts/**'
      - 'data/nhl/**'
      - 'requirements.txt'
      - 'main.py'
      - '.github/workflows/nhl-pipeline.yml'
  workflow_dispatch: {}

# Needed to commit back to the repo with GITHUB_TOKEN
permissions:
  contents: write

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      # Secrets are read by your Python via os.getenv(...)
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
      NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # We create outputs/ and a heartbeat file so there's always something to commit.
      # `|| true` ensures later steps (artifacts/commit) still run even if the scrape fails.
      - name: Run pipeline
        run: |
          mkdir -p outputs
          echo "Fetching NHL data..."
          python main.py || true
          date -u +"%Y-%m-%dT%H:%M:%SZ" > outputs/_run_heartbeat.txt
          echo "Run completed at: $(cat outputs/_run_heartbeat.txt)"
          echo "Listing outputs/"
          ls -la outputs || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nhl-outputs
          path: |
            outputs/**
            *.csv
          if-no-files-found: warn
          retention-days: 7

      - name: Commit outputs
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage generated files from outputs/ and any top-level CSVs
          git add outputs/** || true
          git add *.csv || true

          # Only commit if there are changes
          git diff --cached --quiet && echo "Nothing to commit" || git commit -m "CI: update outputs [skip ci]"

          # Push back to the same branch this workflow ran on
          git push
